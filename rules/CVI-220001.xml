<?xml version="1.0" encoding="UTF-8"?>
<cobra document="https://github.com/wufeifei/cobra">
    <name value="HRS(CRLF)"/>
    <language value="php"/>
    <match mode="function-param-controllable"><![CDATA[header]]></match>
    <repair block="in-function-up"><![CDATA[in_array\s*\(\s*{{PARAM}}\s*,]]></repair>
    <level value="5"/>
    <test>
        <case assert="true"><![CDATA[header("Location: ".$_GET["url"]);]]></case>
    </test>
    <solution>
        ## 安全风险
        CRLF是"回车+换行"(\r\n)的简称。在HTTP协议中，HTTP Header与HTTP Body是用两个CRLF分隔的,浏览器根据这两个CRLF来取出HTTP内容并显示出来。
        所以,一旦能够控制HTTP消息头中的字符,注入一些恶意的换行,就能注入一些会话Cookie或者HTML代码,所以CRLF Injection又叫HTTP Response Splitting.
        CRLF Injection (CRLF注入) / HTTP Response Splitting(HRS)

        ## 修复方案
        使用白名单判断

        ## 代码示例

        `<?php header("Location: ".$_GET["url"]); ?>` 构造
        `/index.php?url=a%0a%0dContent-Type:%20text/html%0a%0d%0a%0d<script>alert(1)</script>`发生注入

        修复方法：设置白名单，限制输入的URL
        ```php
        <?php if(!in_array($_GET["url"], $whitelist)) exit; ?>
        ```
    </solution>

    <status value="on"/>
    <author name="Feei" email="feei@feei.cn"/>
</cobra>